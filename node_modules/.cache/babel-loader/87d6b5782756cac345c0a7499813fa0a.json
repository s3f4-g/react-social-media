{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport useOption from './useOption';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\n\n\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  const {\n    children,\n    component,\n    disabled = false,\n    slotProps = {},\n    slots = {},\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const selectContext = React.useContext(SelectUnstyledContext);\n\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n\n  const Root = component || slots.root || 'li';\n  const {\n    getRootProps,\n    selected,\n    highlighted,\n    index\n  } = useOption({\n    disabled,\n    value,\n    optionRef: ref\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    highlighted,\n    index,\n    selected\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    getSlotProps: getRootProps,\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the OptionUnstyled.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\n\nexport default /*#__PURE__*/React.memo(OptionUnstyled);","map":{"version":3,"sources":["C:/Users/sefac/Desktop/yazılım/react-social-media/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","composeClasses","SelectUnstyledContext","getOptionUnstyledUtilityClass","useSlotProps","useOption","jsx","_jsx","useUtilityClasses","ownerState","disabled","highlighted","selected","slots","root","OptionUnstyled","forwardRef","props","ref","children","component","slotProps","value","other","selectContext","useContext","Error","Root","getRootProps","index","optionRef","classes","rootProps","getSlotProps","elementType","externalSlotProps","externalForwardedProps","className","process","env","NODE_ENV","propTypes","node","bool","label","string","shape","oneOfType","func","object","any","isRequired","memo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"component\", \"disabled\", \"label\", \"slotProps\", \"slots\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '../composeClasses';\nimport { SelectUnstyledContext } from '../SelectUnstyled/SelectUnstyledContext';\nimport { getOptionUnstyledUtilityClass } from './optionUnstyledClasses';\nimport { useSlotProps } from '../utils';\nimport useOption from './useOption';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    disabled,\n    highlighted,\n    selected\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', highlighted && 'highlighted', selected && 'selected']\n  };\n  return composeClasses(slots, getOptionUnstyledUtilityClass, {});\n}\n\n/**\n * An unstyled option to be used within a SelectUnstyled.\n */\nconst OptionUnstyled = /*#__PURE__*/React.forwardRef(function OptionUnstyled(props, ref) {\n  const {\n      children,\n      component,\n      disabled = false,\n      slotProps = {},\n      slots = {},\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const selectContext = React.useContext(SelectUnstyledContext);\n  if (!selectContext) {\n    throw new Error('OptionUnstyled must be used within a SelectUnstyled');\n  }\n  const Root = component || slots.root || 'li';\n  const {\n    getRootProps,\n    selected,\n    highlighted,\n    index\n  } = useOption({\n    disabled,\n    value,\n    optionRef: ref\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    highlighted,\n    index,\n    selected\n  });\n  const classes = useUtilityClasses(ownerState);\n  const rootProps = useSlotProps({\n    getSlotProps: getRootProps,\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    className: classes.root,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? OptionUnstyled.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the option will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * A text representation of the option's content.\n   * Used for keyboard text navigation matching.\n   */\n  label: PropTypes.string,\n  /**\n   * The props used for each slot inside the OptionUnstyled.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the OptionUnstyled.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The value of the option.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\n\n/**\n * An unstyled option to be used within a SelectUnstyled.\n *\n * Demos:\n *\n * - [Unstyled Select](https://mui.com/base/react-select/)\n *\n * API:\n *\n * - [OptionUnstyled API](https://mui.com/base/api/option-unstyled/)\n */\nexport default /*#__PURE__*/React.memo(OptionUnstyled);"]},"metadata":{},"sourceType":"module"}